admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: listener_backend
      address:
        socket_address: { address: 0.0.0.0, port_value: 9080 }
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              config:
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: backend_route
                  virtual_hosts:
                    - name: backend_service
                      domains: ['*']
                      routes:
                        - match: { prefix: '/auth.AuthManager' }
                          route:
                            cluster: auth_service
                            max_grpc_timeout: 60s
                      cors:
                        allow_origin:
                          - '*'
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-access-token,authorization,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: '1728000'
                        expose_headers: x-access-token,authorization,grpc-status,grpc-message
                        enabled: true
                http_filters:
                  - name: envoy.grpc_web
                  - name: envoy.cors
                  - name: envoy.router
  clusters:
    - name: auth_service
      connect_timeout: 25s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      hosts: [{ socket_address: { address: auth-service, port_value: 9090 } }]
      health_checks:
        - timeout: 25s
          interval: 1s
          unhealthy_threshold: 1
          healthy_threshold: 1
          grpc_health_check: { 'service_name': 'auth.AuthManager' }
