version: '3.5'

networks:
  chatbot-network:
    driver: bridge
    name: chatbot-multi-level-network

services:
  envoy-backend:
    image: envoy-chatbot-backend:1.0
    build:
      context: './envoy/backend'
    container_name: chatbot-envoy-backend
    command: usr/local/bin/envoy -c /etc/envoy/envoy.yaml -l info --log-path /tmp/envoy_info.log
    expose:
      - 9080
      - 9901
    ports:
      - 9080:9080
      - 9901:9901
    networks:
      - chatbot-network

  envoy-frontend:
    image: envoy-chatbot-frontend:1.0
    build:
      context: './envoy/frontend'
    container_name: chatbot-envoy-frontend
    command: usr/local/bin/envoy -c /etc/envoy/envoy.yaml -l info --log-path /tmp/envoy_info.log
    expose:
      - 8080
      - 9902
    ports:
      - 8080:8080
      - 9902:9902
    networks:
      - chatbot-network

  react-chatbot:
    image: react-chatbot:1.0
    build:
      context: './frontend/'
    container_name: chatbot-react
    expose:
      - 80
    ports:
      - 80:80
    restart: always
    networks:
      - chatbot-network

  postgres-chatbot:
    hostname: postgres-chatbot
    image: postgres:11
    container_name: chatbot-postgres
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - ./backend/chatbot-db/db-scripts:/docker-entrypoint-initdb.d
      - ./backend/chatbot-db/db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatbot
      - POSTGRES_USER=master
      - POSTGRES_PASSWORD=masterkey
    networks:
      - chatbot-network

  auth-service:
    image: auth-service-chatbot:1.0
    build:
      context: './backend/auth-service'
    links:
      - postgres-chatbot
    restart: always
    container_name: chatbot-auth-service
    expose:
      - 9090
    environment:
      - NODE_ENV=staging
      - DB_HOST=postgres-chatbot
      - GRPC_LOG_LEVEL=DEBUG
      - GRPC_HOST=0.0.0.0
      - GRPC_PORT=9090
    networks:
      - chatbot-network
